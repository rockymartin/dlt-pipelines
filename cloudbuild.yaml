# Cloud Build configuration for dlt Pipelines (Pokemon & Chess)
# This file defines how to build and deploy both pipelines as Cloud Run Jobs
# Optimized for direct GitHub integration via Cloud Build triggers

steps:
  # Build Pokemon Pipeline Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-f', 'Dockerfile',
      '-t', 'gcr.io/$PROJECT_ID/pokemon-pipeline:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/pokemon-pipeline:latest',
      '--build-arg', 'PIPELINE_TYPE=pokemon',
      '.'
    ]

  # Build Chess Pipeline Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-f', 'Dockerfile',
      '-t', 'gcr.io/$PROJECT_ID/chess-pipeline:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/chess-pipeline:latest',
      '--build-arg', 'PIPELINE_TYPE=chess',
      '.'
    ]

  # Push Pokemon Pipeline images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/pokemon-pipeline:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/pokemon-pipeline:latest']

  # Push Chess Pipeline images
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/chess-pipeline:$COMMIT_SHA']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/chess-pipeline:latest']

  # Deploy Pokemon Pipeline as Cloud Run Job
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'jobs', 'create', 'pokemon-pipeline-job',
      '--image', 'gcr.io/$PROJECT_ID/pokemon-pipeline:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--memory', '2Gi',
      '--cpu', '2',
      '--timeout', '3600',
      '--max-retries', '3',
      '--set-env-vars', 'POKEMON_RESOURCES=${_POKEMON_RESOURCES}',
      '--set-env-vars', 'POKEMON_LIMIT=${_POKEMON_LIMIT}',
      '--replace'
    ]

  # Deploy Chess Pipeline as Cloud Run Job
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'jobs', 'create', 'chess-pipeline-job',
      '--image', 'gcr.io/$PROJECT_ID/chess-pipeline:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--memory', '2Gi',
      '--cpu', '2',
      '--timeout', '3600',
      '--max-retries', '3',
      '--set-env-vars', 'CHESS_RESOURCES=${_CHESS_RESOURCES}',
      '--set-env-vars', 'CHESS_PLAYERS=${_CHESS_PLAYERS}',
      '--set-env-vars', 'CHESS_START_MONTH=${_CHESS_START_MONTH}',
      '--set-env-vars', 'CHESS_END_MONTH=${_CHESS_END_MONTH}',
      '--replace'
    ]

# Substitution variables (can be overridden in trigger)
substitutions:
  _REGION: 'us-central1'
  # Pokemon Pipeline settings
  _POKEMON_RESOURCES: 'pokemon_details,berries'
  _POKEMON_LIMIT: '50'
  # Chess Pipeline settings
  _CHESS_RESOURCES: 'players_profiles,players_games,players_online_status'
  _CHESS_PLAYERS: 'magnuscarlsen,rpragchess,vincentkeymer,dommarajugukesh'
  _CHESS_START_MONTH: '2024/01'
  _CHESS_END_MONTH: '2024/12'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/pokemon-pipeline:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/pokemon-pipeline:latest'
  - 'gcr.io/$PROJECT_ID/chess-pipeline:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/chess-pipeline:latest'

name: Deploy dlt Pipelines to Cloud Run

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGION: us-central1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run basic syntax check
      run: |
        python -m py_compile pokemon_pipeline.py
        python -m py_compile pokemon/__init__.py
        python -m py_compile pokemon/settings.py
        python -m py_compile chess_pipeline.py
        python -m py_compile chess/__init__.py
        python -m py_compile chess/settings.py

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
    
    - name: 'Configure Docker to use gcloud as a credential helper'
      run: |
        gcloud auth configure-docker
    
    - name: 'Get Project ID'
      id: project
      run: |
        PROJECT_ID=$(gcloud config get-value project)
        echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT
        echo "Detected project ID: $PROJECT_ID"

    - name: 'Build and Push Pokemon Pipeline Docker Image'
      run: |
        docker build --build-arg PIPELINE_TYPE=pokemon -t gcr.io/${{ steps.project.outputs.project_id }}/pokemon-pipeline:$GITHUB_SHA .
        docker push gcr.io/${{ steps.project.outputs.project_id }}/pokemon-pipeline:$GITHUB_SHA
        docker tag gcr.io/${{ steps.project.outputs.project_id }}/pokemon-pipeline:$GITHUB_SHA gcr.io/${{ steps.project.outputs.project_id }}/pokemon-pipeline:latest
        docker push gcr.io/${{ steps.project.outputs.project_id }}/pokemon-pipeline:latest

    - name: 'Build and Push Chess Pipeline Docker Image'
      run: |
        docker build --build-arg PIPELINE_TYPE=chess -t gcr.io/${{ steps.project.outputs.project_id }}/chess-pipeline:$GITHUB_SHA .
        docker push gcr.io/${{ steps.project.outputs.project_id }}/chess-pipeline:$GITHUB_SHA
        docker tag gcr.io/${{ steps.project.outputs.project_id }}/chess-pipeline:$GITHUB_SHA gcr.io/${{ steps.project.outputs.project_id }}/chess-pipeline:latest
        docker push gcr.io/${{ steps.project.outputs.project_id }}/chess-pipeline:latest
    
    - name: 'Deploy Pokemon Pipeline to Cloud Run'
      run: |
        gcloud run deploy pokemon-pipeline \
          --image gcr.io/${{ steps.project.outputs.project_id }}/pokemon-pipeline:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --memory 2Gi \
          --cpu 2 \
          --timeout 3600 \
          --max-instances 10 \
          --set-env-vars "POKEMON_RESOURCES=pokemon_details,berries" \
          --set-env-vars "POKEMON_LIMIT=50" \
          --no-allow-unauthenticated

    - name: 'Deploy Chess Pipeline to Cloud Run'
      run: |
        gcloud run deploy chess-pipeline \
          --image gcr.io/${{ steps.project.outputs.project_id }}/chess-pipeline:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --memory 2Gi \
          --cpu 2 \
          --timeout 3600 \
          --max-instances 10 \
          --set-env-vars "CHESS_RESOURCES=players_profiles,players_games,players_online_status" \
          --set-env-vars "CHESS_PLAYERS=magnuscarlsen,rpragchess,vincentkeymer,dommarajugukesh" \
          --set-env-vars "CHESS_START_MONTH=2024/01" \
          --set-env-vars "CHESS_END_MONTH=2024/12" \
          --no-allow-unauthenticated
    
    - name: 'Create/Update Pokemon Cloud Run Job'
      run: |
        # Replace PROJECT_ID placeholder in the job config
        sed "s/PROJECT_ID/${{ steps.project.outputs.project_id }}/g" cloud-run-job.yaml > cloud-run-job-deployed.yaml
        gcloud run jobs replace cloud-run-job-deployed.yaml --region $REGION

    - name: 'Create/Update Chess Cloud Run Job'
      run: |
        # Replace PROJECT_ID placeholder in the job config
        sed "s/PROJECT_ID/${{ steps.project.outputs.project_id }}/g" chess-cloud-run-job.yaml > chess-cloud-run-job-deployed.yaml
        gcloud run jobs replace chess-cloud-run-job-deployed.yaml --region $REGION
    
    - name: 'Run Pokemon Pipeline Job'
      run: |
        gcloud run jobs execute pokemon-pipeline-job --region $REGION --wait

    - name: 'Run Chess Pipeline Job'
      run: |
        gcloud run jobs execute chess-pipeline-job --region $REGION --wait
